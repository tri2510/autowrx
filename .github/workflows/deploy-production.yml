name: Tag Production Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to deploy (e.g., v1.0.0 or commit SHA)'
        required: true
        type: string
      confirm:
        description: 'Type "deploy" to confirm'
        required: true
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'deploy'
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Validate version
        id: version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "Releasing version: $VERSION for production"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: validate
    environment: production

    steps:
      - name: Production release notification
        run: |
          echo "=========================================="
          echo "Production Release: ${{ needs.validate.outputs.version }}"
          echo "=========================================="
          echo ""
          echo "Images to deploy:"
          echo "  - ghcr.io/${{ github.repository }}/frontend:${{ needs.validate.outputs.version }}"
          echo "  - ghcr.io/${{ github.repository }}/backend:${{ needs.validate.outputs.version }}"
          echo ""
          echo "Deployment method: Server-side polling"
          echo "  Production server will auto-deploy within 5 minutes"
          echo "  after .env.stack is updated with the new version tags"
          echo ""
          echo "Manual deployment steps:"
          echo "  1. SSH to production server"
          echo "  2. Update /opt/autowrx/production/.env.stack:"
          echo "     FRONTEND_IMAGE_TAG=${{ needs.validate.outputs.version }}"
          echo "     BACKEND_IMAGE_TAG=${{ needs.validate.outputs.version }}"
          echo "  3. Server will auto-deploy on next poll cycle"
          echo "  4. Or trigger manually: /opt/deploy/scripts/auto-update.sh"
          echo ""
          echo "Monitoring:"
          echo "  ssh deploy@production 'tail -f /var/log/autowrx-deploy.log'"
          echo "  ssh deploy@production 'docker compose ps'"
          echo ""
          echo "Rollback:"
          echo "  Update .env.stack with previous version tag"
          echo "  Wait for auto-deploy or trigger manually"
          echo ""

      - name: Create deployment record
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ needs.validate.outputs.version }}',
              environment: 'production',
              description: 'Tagged for production by ${{ github.actor }}',
              auto_merge: false
            });
